/**
 * Бинарный поиск. Принцип прост: сначала берём
 * элемент находящийся посередине и сравниваем с тем, который мы
 * хотим найти. Если центральный элемент больше нашего,
 * рассматриваем массив слева от центрального, а если больше -
 * справа и повторяем так до тех пор, пока не найдем наш элемент.
 * Задача:
 * Написать программу на любом языке в любой парадигме для
 * бинарного поиска. На вход подаётся целочисленный массив и
 * число. На выходе - индекс элемента или -1, в случае если искомого
 * элемента нет в массиве.
 * В данном коде используется процедурная парадигма программирования.
 * Основные признаки:
 * - Программа состоит из функций, выполняющих последовательные шаги алгоритма.
 * - Отсутствуют классы и объекты.
 * - Данные передаются в функции напрямую, а не через объекты.
 * - Вызов функций происходит imperatively по ходу выполнения программы.
 * - Используются примитивные типы данных (int, array) для хранения состояния.
 * - Логика реализована с помощью функций (search, main), а не методов объекта.
 *  Таким образом, программа состоит из набора функций,
 *  обрабатывающих и трансформирующих данные - что характерно для процедурного подхода.
 */


package BinarySearch;


import java.util.Arrays;

public class BinarySearch {

    public static int search(int[] array, int value) {
        Arrays.sort(array);
        System.out.println(Arrays.toString(array));
        int left = 0;
        int right = array.length - 1;

        while (left <= right) {
            int middle = left + (right - left) / 2;

            if (array[middle] == value) {
                return middle;
            }

            if (array[middle] < value) {
                left = middle + 1;
            } else {
                right = middle - 1;
            }
        }

        return -1;
    }

    public static void main(String[] args) {
        int[] array = {12, 45, -23, 67,-9, 43, 56, 8};
        System.out.println(Arrays.toString(array));
        int value = 45;

        int index = BinarySearch.search(array, value);

        if (index != -1) {
            System.out.println("Элемент найден по индексу: " + index);
        } else {
            System.out.println("Элемент не найден");
        }
    }
}
